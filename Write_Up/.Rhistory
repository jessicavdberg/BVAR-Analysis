dat <- ts(dats, start=c(1980,3), frequency = 4)
plot(dat, main = 'Representation of data')
## STATIONARITY TEST
x <- as.data.frame(dat)
adf.test(x$y)
adf.test(x$p)
adf.test(x$q)
adf.test(x$r)
adf.test(x$ex)
adf.test(x$im)
adf.test(x$po)
adf.test(x$dp)
p1 <- pp.test(x$y)
p2 <- pp.test(x$p)
p3 <- pp.test(x$q)
p4 <- pp.test(x$r)
p5 <- pp.test(x$ex)
p6 <- pp.test(x$im)
p7 <- pp.test(x$po)
p8 <- pp.test(x$dp)
old.par <- par(mfrow=c(4,2))
plot(acf(x$y, lag.max=20, plot=FALSE), ylab="ACF for Real Output", main="") # Change all this.
plot(acf(x$p, lag.max=20, plot=FALSE), ylab="ACF for CPI", main="")
plot(acf(x$q, lag.max=20, plot=FALSE), ylab="ACF for Real Stock Price Index", main="")
plot(acf(x$dp, lag.max=20, plot=FALSE), ylab="ACF for Inflation" ,main="")
plot(acf(x$r, lag.max=20, plot=FALSE), ylab="ACF for ST domestic interest rate" ,main="")
plot(acf(x$ex, lag.max=20, plot=FALSE), ylab="ACF for Real Exports" ,main="")
plot(acf(x$im, lag.max=20, plot=FALSE), ylab="ACF for Real Imports" ,main="")
plot(acf(x$po, lag.max=20, plot=FALSE), ylab="ACF for Oil Price" ,main="")
par(old.par)
## Optimal lag length
library(vars)
lag <- VARselect(x, type="both")
## Serial correlation
## Forecast Error Vairance Decomposition
# help <- fevd(run, n.ahead=10)
# plot(help)
## BVAR
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5), alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001), adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
## BVAR
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5), alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001), adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1,priors = priors, mh = mh, verbose = TRUE)
x
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1,priors = priors, mh = mh, verbose = TRUE)
run <- bvar(dats, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1,priors = priors, mh = mh, verbose = TRUE)
run <- bvar(dats, lags = 5)
setDT(x)
run <- bvar(x, lags = 5)
data.table(x)
install.package("data.table")
install.packages("data.table")
uninstall.packages("tseries")
remove.packages("tseries")
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1,priors = priors, mh = mh, verbose = TRUE)
remove.packages("BMR")
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1,priors = priors, mh = mh, verbose = TRUE)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1,priors = priors, mh = mh, verbose = TRUE)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
View(data)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Lets load in example data, and see how this can be stored and later called from your 'data' folder.
if(!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
library(readxl)
library(ggplot2)
library(Rcpp)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
# Notice that as you are working in a .Rproj file (I am assuming you are) - the relative paths of your directories start at your specified root.
# This means that when working in a .Rproj file, you never need to use getwd() - it is assumed as your base root automatically.
y <- diff(data$y))
y <- diff(data$y)
xa <- data[-1,]
dp <- xa$dp
dats <- cbind(y,p,dp,q,r,ex,im,po)
plot(dats)
dats
x <- as.data.frame(dats)
x
plot(x)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa)
plot(dats, main = "Representation of Data")
plot(dats)
plot(dataa)
plot(dataa main=" Representation of Data")
plot(dataa, main=" Representation of Data")
library(tseries)
install.packages("tseries")
library(tseries)
library("dplyr")
x <- ts(dats, start=c(1980,3), frequency = 4)
plot(x, main=" Representation of Data")
adf.test(x$y)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
x <- as.data.frame(dataa)
adf.test(x$y)
adf.test(x$y)
adf.test(x$y)
adf.test(x$p)
adf.test(x$dp)
adf.test(x$q)
adf.test(x$r)
adf.test(x$ex)
adf.test(x$im)
adf.test(x$po)
old.par <- par(mfrow=c(4,2))
plot(acf(x$y, lag.max=20, plot=FALSE), ylab="Real Output", main="")
plot(acf(x$p, lag.max=20, plot=FALSE), ylab="CPI", main="")
plot(acf(x$dp, lag.max=20, plot=FALSE), ylab="Inflation", main="")
plot(acf(x$q, lag.max=20, plot=FALSE), ylab="Real Stock Price Index" ,main="")
plot(acf(x$r, lag.max=20, plot=FALSE), ylab="ST Domestic Interest Rate" ,main="")
plot(acf(x$ex, lag.max=20, plot=FALSE), ylab="Real Exports" ,main="")
plot(acf(x$im, lag.max=20, plot=FALSE), ylab="Real Imports" ,main="")
plot(acf(x$po, lag.max=20, plot=FALSE), ylab="Oil Price" ,main="")
par(old.par)
p1 <- pp.test(x$y)
p2 <- pp.test(x$p)
p3 <- pp.test(x$dp)
p4
p5 <- pp.test(x$r)
p6 <- pp.test(x$ex)
p7 <- pp.test(x$im)
p8 <- pp.test(x$po)
library(BVAR)
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
installed.packages()
remove.packages(bvars)
installed.packages()
library(bvars)
remove.packages(bvars)
remove.packages("bvars")
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
installed.packages()
remove.packages("vars")
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
remove.packages("BVARS")
remove.packages("BVAR")
install.packages("BVAR")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Lets load in example data, and see how this can be stored and later called from your 'data' folder.
if(!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
library(readxl)
library(ggplot2)
library(Rcpp)
install.packages("tseries")
library(tseries)
library("dplyr")
library(BVAR)
install.packages("BVAR")
library(BVAR)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
y <- diff(data$y)
p <- diff(data$p)
xa <- data[-1,]
dp <- xa$dp
q <- diff(data$q)
r <- diff(data$r)
ex <- diff(data$ex)
im <- diff(data$im)
po <- diff(data$po)
dats <- cbind(y,p,dp,q,r,ex,im,po)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
x <- as.data.frame(dataa)
adf.test(x$y)
adf.test(x$p)
adf.test(x$dp)
adf.test(x$q)
adf.test(x$r)
adf.test(x$ex)
adf.test(x$im)
adf.test(x$po)
old.par <- par(mfrow=c(4,2))
plot(acf(x$y, lag.max=20, plot=FALSE), ylab="Real Output", main="")
plot(acf(x$p, lag.max=20, plot=FALSE), ylab="CPI", main="")
plot(acf(x$dp, lag.max=20, plot=FALSE), ylab="Inflation", main="")
plot(acf(x$q, lag.max=20, plot=FALSE), ylab="Real Stock Price Index" ,main="")
plot(acf(x$r, lag.max=20, plot=FALSE), ylab="ST Domestic Interest Rate" ,main="")
plot(acf(x$ex, lag.max=20, plot=FALSE), ylab="Real Exports" ,main="")
plot(acf(x$im, lag.max=20, plot=FALSE), ylab="Real Imports" ,main="")
plot(acf(x$po, lag.max=20, plot=FALSE), ylab="Oil Price" ,main="")
par(old.par)
p1 <- pp.test(x$y)
p2 <- pp.test(x$p)
p3 <- pp.test(x$dp)
p4 <- pp.test(x$q)
p5 <- pp.test(x$r)
p6 <- pp.test(x$ex)
p7 <- pp.test(x$im)
p8 <- pp.test(x$po)
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
installed.packages()
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
x
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = "priors", mh = "mh", verbose = TRUE)
?
?bvar
wdw
remove.packages("forecast")
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
installed.packages()
remove.packages("data.table")
remove.packages("dbplyr")
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(dataa, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(dataa, lags = 1, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(dataa, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(dataa, lags = 3, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(dataa, lags = 4, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(x, lags = 4, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(x, lags = 3, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
remove.packages("bvartools")
install.packages("bvartools")
install.packages("bvartools")
```
library(bvartools)
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
remove.packages("bvartools")
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
y <- diff(data$y)
p <- diff(data$p)
xa <- data[-1,]
dp <- xa$dp
q <- diff(data$q)
r <- diff(data$r)
ex <- diff(data$ex)
im <- diff(data$im)
po <- diff(data$po)
dats <- cbind(y,p,dp,q,r,ex,im,po)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
x <- as.data.frame(dataa)
adf.test(x$y)
library(tseries)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Lets load in example data, and see how this can be stored and later called from your 'data' folder.
if(!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
library(readxl)
library(ggplot2)
library(Rcpp)
library(tseries)
library("dplyr")
install.packages("BVAR")
library(BVAR)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
# Notice that as you are working in a .Rproj file (I am assuming you are) - the relative paths of your directories start at your specified root.
# This means that when working in a .Rproj file, you never need to use getwd() - it is assumed as your base root automatically.
adf.test(x$y)
adf.test(x$p)
adf.test(x$y)
library(BVAR)
adf.test(x$ex)
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Lets load in example data, and see how this can be stored and later called from your 'data' folder.
if(!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)
library(readxl)
library(ggplot2)
library(Rcpp)
library(tseries)
library("dplyr")
install.packages("BVAR")
library(BVAR)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
# Notice that as you are working in a .Rproj file (I am assuming you are) - the relative paths of your directories start at your specified root.
# This means that when working in a .Rproj file, you never need to use getwd() - it is assumed as your base root automatically.
install.packages("BVAR")
install.packages("BVAR")
install.packages("BVAR")
library(BVAR)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
y <- diff(data$y)
p <- diff(data$p)
xa <- data[-1,]
dp <- xa$dp
q <- diff(data$q)
r <- diff(data$r)
ex <- diff(data$ex)
im <- diff(data$im)
po <- diff(data$po)
dats <- cbind(y,p,dp,q,r,ex,im,po)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
x <- as.data.frame(dataa)
adf.test(x$y)
library(dplyr)
adf.test(x$y)
adf.test(x$y)
## TEST FOR STATIONARY
library(tseries)
library(ggplot2)
library(dplyr)
detach("package:dplyr", character.only = TRUE)
library("dplyr", character.only = TRUE)
adf.test(x$y)
adf.test(x$p)
adf.test(x$dp)
adf.test(x$q)
adf.test(x$r)
adf.test(x$ex)
adf.test(x$im)
adf.test(x$po)
old.par <- par(mfrow=c(4,2))
plot(acf(x$y, lag.max=20, plot=FALSE), ylab="Real Output", main="")
plot(acf(x$p, lag.max=20, plot=FALSE), ylab="CPI", main="")
plot(acf(x$dp, lag.max=20, plot=FALSE), ylab="Inflation", main="")
plot(acf(x$q, lag.max=20, plot=FALSE), ylab="Real Stock Price Index" ,main="")
plot(acf(x$r, lag.max=20, plot=FALSE), ylab="ST Domestic Interest Rate" ,main="")
plot(acf(x$ex, lag.max=20, plot=FALSE), ylab="Real Exports" ,main="")
plot(acf(x$im, lag.max=20, plot=FALSE), ylab="Real Imports" ,main="")
plot(acf(x$po, lag.max=20, plot=FALSE), ylab="Oil Price" ,main="")
par(old.par)
p1 <- pp.test(x$y)
p2 <- pp.test(x$p)
p3 <- pp.test(x$dp)
p4 <- pp.test(x$q)
p5 <- pp.test(x$r)
p6 <- pp.test(x$ex)
p7 <- pp.test(x$im)
p8 <- pp.test(x$po)
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
install.packages()
devtools::install_github("nk027/BVAR")
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
library("BVAR")
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
la <- bvars(data, lags=1)
la <- bvar(data, lags=1)
la <- bvar(x, lags=1)
x
as.ts(x)
run <- bvar(x, lags = 2, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
set.seed(42)
library("BVAR")
x <- fred_qd[1:243, c("GDPC1", "PCECC96", "GPDIC1", "HOANBS", "GDPCTPI", "FEDFUNDS")]
x <- fred_transform(x, codes = c(4, 4, 4, 4, 4, 1))
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 5, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
Output <- diff(data$y)*100
xa <- data[-1,]
Inflation <- xa$dp
Stock_Price <- diff(data$q)*100
Exports <- diff(data$ex)*100
Imports <- diff(data$im)*100
Oil <- diff(data$po)*100
Exchange_Rate <- diff(data$e)*100
dats <- cbind(Output, Inflation, Stock_Price ,Exports,Imports,Oil,Exchange_Rate)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 10, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
library(BVAR)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
Output <- diff(data$y)*100
xa <- data[-1,]
Inflation <- xa$dp
Stock_Price <- diff(data$q)*100
Exports <- diff(data$ex)*100
Imports <- diff(data$im)*100
Oil <- diff(data$po)*100
Exchange_Rate <- diff(data$e)*100
dats <- cbind(Output, Inflation, Stock_Price ,Exports,Imports,Oil,Exchange_Rate)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
x <- as.data.frame(dataa)
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
run <- bvar(x, lags = 10, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Lets load in example data, and see how this can be stored and later called from your 'data' folder.
#library(tidyverse)
#library(readxl)
#library(ggplot2)
#library(Rcpp)
#library(tseries)
library("dplyr")
library(BVAR)
library(dplyr)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
# Notice that as you are working in a .Rproj file (I am assuming you are) - the relative paths of your directories start at your specified root.
# This means that when working in a .Rproj file, you never need to use getwd() - it is assumed as your base root automatically.
mn <- bv_minnesota(lambda = bv_lambda(mode = 0.2, sd = 0.4, min = 0.0001, max = 5),alpha = bv_alpha(mode = 2), var = 1e07)
soc <- bv_soc(mode = 1, sd = 1, min = 1e-04, max = 50)
sur <- bv_sur(mode = 1, sd = 1, min = 1e-04, max = 50)
priors <- bv_priors(hyper = "auto", mn = mn, soc = soc, sur = sur)
mh <- bv_metropolis(scale_hess = c(0.05, 0.0001, 0.0001),adjust_acc = TRUE, acc_lower = 0.25, acc_upper = 0.45)
la <- bvar(x, lags=1)
run <- bvar(x, lags = 10, n_draw = 50000, n_burn = 25000, n_thin = 1, priors = priors, mh = mh, verbose = TRUE)
GDP <- diff(data$y)*100
xa <- data[-1,]
Inflation <- xa$dp
Stock_Price <- diff(data$q)*100
Exports <- diff(data$ex)*100
Imports <- diff(data$im)*100
Oil <- diff(data$po)*100
Exchange_Rate <- diff(data$e)*100
dats <- cbind(Output, Inflation, Stock_Price ,Exports,Imports,Oil,Exchange_Rate)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
dats <- cbind(GDP, Inflation, Stock_Price ,Exports,Imports,Oil,Exchange_Rate)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
GDP <- diff(data$y)*100
xa <- data[-1,]
Inflation <- xa$dp
Stock_Price <- diff(data$q)*100
Exports <- diff(data$ex)*100
Imports <- diff(data$im)*100
Oil <- diff(data$po)*100
Exchange_Rate <- diff(data$e)*100
dats <- cbind(GDP, Inflation, Stock_Price ,Exports,Imports,Oil,Exchange_Rate)
dataa <- ts(dats, start=c(1980,3), frequency = 4)
plot(dataa, main=" Representation of Data")
x <- as.data.frame(dataa)
old.par <- par(mfrow=c(4,2))
plot(acf(x$GDP, lag.max=20, plot=FALSE), ylab="Real Output", main="")
plot(acf(x$Inflation, lag.max=20, plot=FALSE), ylab="Inflation", main="")
plot(acf(x$Stock_Price, lag.max=20, plot=FALSE), ylab="Real Stock Price Index" ,main="")
plot(acf(x$Exports, lag.max=20, plot=FALSE), ylab="Real Exports" ,main="")
plot(acf(x$Imports, lag.max=20, plot=FALSE), ylab="Real Imports" ,main="")
plot(acf(x$Oil, lag.max=20, plot=FALSE), ylab="Oil Price" ,main="")
plot(acf(x$Exchange_Rate, lag.max=20, plot=FALSE), ylab="Oil Price" ,main="")
par(old.par)
old.par <- par(mfrow=c(4,2))
plot(acf(x$GDP, lag.max=20, plot=FALSE), ylab="Real GDP", main="")
plot(acf(x$Inflation, lag.max=20, plot=FALSE), ylab="Inflation", main="")
plot(acf(x$Stock_Price, lag.max=20, plot=FALSE), ylab="Real Stock Price Index" ,main="")
plot(acf(x$Exports, lag.max=20, plot=FALSE), ylab="Real Exports" ,main="")
plot(acf(x$Imports, lag.max=20, plot=FALSE), ylab="Real Imports" ,main="")
plot(acf(x$Oil, lag.max=20, plot=FALSE), ylab="Oil Price" ,main="")
plot(acf(x$Exchange_Rate, lag.max=20, plot=FALSE), ylab="Oil Price" ,main="")
par(old.par)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Lets load in example data, and see how this can be stored and later called from your 'data' folder.
#library(tidyverse)
#library(readxl)
#library(ggplot2)
#library(Rcpp)
#library(tseries)
library("dplyr")
library(BVAR)
library(dplyr)
data <- read.delim("C:/Users/jesic/OneDrive/Desktop/Studies 2021/Second Semester/Time series/Project Dawie/Real/11_South Africa.txt")
# Notice that as you are working in a .Rproj file (I am assuming you are) - the relative paths of your directories start at your specified root.
# This means that when working in a .Rproj file, you never need to use getwd() - it is assumed as your base root automatically.
print(run)
